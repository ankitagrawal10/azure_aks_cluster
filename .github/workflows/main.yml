name: Create AKS Cluster with Terraform

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  AKS-Cluster-Deployment:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .

    steps:
      - name: Checkout
        uses: actions/checkout@v3.1.0

      - name: 'Az CLI login'
        run: |
          az login --tenant add67cd2-c8b2-416c-b171-b61b22be92f4

      - name: Update Azure CLI to the Latest Version
        run: |
          sudo apt-get update && sudo apt-get install --only-upgrade -y azure-cli

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          terraform_version: latest

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Refresh Terraform State
        id: refresh
        run: terraform refresh

      - name: Terraform Plan
        id: plan
        run: terraform plan

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

      - name: Debug Terraform Outputs
        run: |
         echo "=== Terraform Outputs ==="
         terraform output
         echo "=== JSON Format ==="
         terraform output -json aks_cluster_name

      - name: Get AKS Credentials (No need for aks-set-context)
        run: |
          az aks get-credentials --name "ankit-cluster" --resource-group "ankit-rg"
          kubectl config current-context


      - name: Build AKS Cluster and Push Image
        run: |
          docker build -t notes-app ./django-notes-app/
          docker tag notes-app:latest projectimage01.azurecr.io/notes-app:latest
          az acr login --name projectimage01
          docker push projectimage01.azurecr.io/notes-app:latest

      - name: Fetch ACR Credentials
        id: fetch_credentials
        run: |
          ACR_USERNAME=$(terraform output username | tr -d '"')
          ACR_PASSWORD=$(terraform output password | tr -d '"')
          echo "Extracted ACR_USERNAME: $ACR_USERNAME" 
          echo "Extracted ACR_PASSWORD: $ACR_PASSWORD"

      - name: Docker Azure login
        uses: azure/docker-login@v1
        with: 
          login-server: projectimage01.azurecr.io
          username: $ACR_USERNAME
          password: $ACR_PASSWORD

      - uses: azure/aks-set-context@v4
        with:
           resource-group: 'ankit-rg'
           cluster-name: 'ankit-cluster'

      
      - name: Deploy namespace
        run: |
          kubectl apply -f namespace.yaml
          kubectl get ns

           
      - name: Create Kubernetes Docker Registry Secret
        uses: azure/k8s-create-secret@v4
        with:
          namespace: "notes-app"
          secret-name: "regcred"
          container-registry-url: "projectimage01.azurecr.io"
          container-registry-username: "$ACR_USERNAME"
          container-registry-password: "$ACR_PASSWORD"
          secret-type: kubernetes.io/dockerconfigjson

      - name: Deploy Application to AKS
        run: |
          kubectl get secrets -n notes-app
          kubectl apply -f django-notes.yaml
          kubectl get node -n notes-app
          sleep 50
          kubectl get pods -n notes-app
          sleep 120
          kubectl get svc -n notes-app
